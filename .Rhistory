date1 <- as.Date(LValley$date, "%d.%m.%Y %H:%M")
date1 <- as.Date(data$date, "%d.%m.%Y")
date1 <- as.Date(data$date, "%d.%m.%Y %H:%M")
head(data.date)
head(data.Date)
head(data)
head(data$date)
head(data$Date)
data$Date
class(data)
head(data)
data <- read.csv("household_power_consumption.txt", sep="", header=TRUE)
data <- read.csv("exdata-data-household_power_consumption//household_power_consumption.txt", sep="", header=TRUE)
head(data)
head(data$date)
data$Date
head(date$date)
head(date$Date)
head(data$Date)
data <- read.csv("exdata-data-household_power_consumption//household_power_consumption.txt", sep=";", header=TRUE)
head(data$Date)
data.sub <- subset(data, data$Date>=01/02/2007 & data$Date <=02/02/2007)
date1 <- as.Date(data$Date, "%d.%m.%Y %H:%M")
data.sub <- subset(data, date1>=01/02/2007 & date1 <=02/02/2007)
head(data.sub)
class(data$Date)
class(data1)
class(date1)
startDate <- as.Date ("01/02/2007", "%d.%m.%Y")
endDate <- as.Date ("02/02/2007", "%d.%m.%Y")
data.sub <- subset(data, date1>=startDate & date1 <= endDate)
head(data.sub)
head(date1)
head(data.date1)
head(data$date1)
head(data$date)
head(data$Date)
class(data)
data.sub <- subset(data, date>=startDate & date <= endDate)
data <- read.csv("household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors=FALSE)
data <- read.csv("exdata-data-household_power_consumption//household_power_consumption.txt", sep=";", header=TRUE, stringsAsFactors=FALSE)
class(data.Date)
head(data.Date)
class(data)
data.Date
class(data$Date)
date1 <- as.Date(data$Date, "%d.%m.%Y %H:%M")
startDate <- as.Date ("01/02/2007", "%d.%m.%Y")
endDate <- as.Date ("02/02/2007", "%d.%m.%Y")
data.sub <- subset(data, date1>=startDate & date1 <= endDate)
head(data.sub)
data.sub <- subset(data, data$Date>=startDate & data$Date <= endDate)
head(data.sub)
data <- read.csv("exdata-data-household_power_consumption//household_power_consumption.txt", sep=";", header=TRUE)
myfunc <- function(x,y){data[data$Date >= x & data$Date <= y,]}
myfunc(startDate, endDate)
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) <= y,]}
myfunc(startDate, endDate)
head(data)
data.sub <- myfunc(startDate, endDate)
head(data.sub)
startDate <- as.Date ("01/02/2007")
endDate <- as.Date ("02/02/2007")
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) <= y,]}
data.sub <- myfunc(startDate, endDate)
head(data.sub)
hist(data.sub$Global_active_power)
?hist
hist(as.numeric(data.sub$Global_active_power))
hist(as.numeric(data.sub$Global_active_power, col="red"))
hist(as.numeric(data.sub$Global_active_power, col="red"))
data.sub
tail(data.sub)
head(data.sub)
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) <= y,]}
startDate <- as.Date ("01/02/2007")
endDate <- as.Date ("02/02/2007")
data.sub <- myfunc(startDate, endDate)
tail(data.sub)
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) <= y,]}
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) = y,]}
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) == y,]}
data.sub <- myfunc(startDate, endDate)
head(data.sun)
head(data.sub)
tail(data.sub)
data.sub <- subset(data, data$Date>=as.Date("1/2/2007") & data$Date <= as.Date("2/2/2007")
data.sub <- subset(data, data$Date>=as.Date("1/2/2007") & data$Date <= as.Date("2/2/2007")
data.sub <- subset(data, data$Date>=as.Date("1/2/2007") & data$Date <= as.Date("2/2/2007"))
myfunc <- function(x,y){data[as.Date(data$Date) >= x & as.Date(data$Date) <= y,]}
startDate <- as.Date ("1/2/2007")
endDate <- as.Date ("2/2/2007")
data.sub <- myfunc(startDate, endDate)
head(data.sub)
tail(data.sub)
data.sub(selectbyDate(data, start="1/2/2007", end="2/2/2007"))
data.sub <- selectbyDate(data, start="1/2/2007", end="2/2/2007"))
data.sub <- selectbyDate(data, start="1/2/2007", end="2/2/2007")
?selectbyDate
data.sub <- selectByDate(data, start="1/2/2007", end="2/2/2007")
??selectByDate
install.packages("openair")
data.sub <- selectByDate(data, start="1/2/2007", end="2/2/2007")
data.sub<- subset(data, as.Date(Date) >= '1/2/2007' & as.Date(Date) <= '2/2/2007')
head(data.sub)
tail(data.sun)
tail(data.sub)
nrow(data)
nrow(data.sub)
nrow(data.sub$Date)
data.sub$Date
data.sub<- subset(data, as.Date(Date) >= '1/2/2007' & as.Date(Date) <= '3/2/2007')
data.sub<- subset(data, as.Date(Date) == '1/2/2007' | as.Date(Date) == '2/2/2007')
head(data.sub)
tail(data.sub)
data.sub
nrow(data.sub)
data <- read.csv("exdata-data-household_power_consumption//household_power_consumption.txt", sep=";", header=TRUE)
data.sub<- subset(data, as.Date(data$Date) == '1/2/2007' | as.Date(data$Date) == '2/2/2007')
head(data.sub)
tail(data.sub)
date1 <- c("1/2/2007")
date2 <- c("2/2/2007")
mydata <- subset(mydata, (mydata$Date == date1 | mydata$Date == date2 ))
mydata <- subset(data, (data$Date == date1 | data$Date == date2 ))
mydata
tail(mydata)
hist(as.numeric(mydata.sub$Global_active_power, col="red"))
hist(as.numeric(mydata$Global_active_power, col="red"))
hist(mydata$Global_active_power,  main="Global Active Power",col='red',ylab= "Frequency",
xlab="Global Active Power(kilowatts)")
hist(as.numeric(mydata$Global_active_power),  main="Global Active Power",col='red',ylab= "Frequency",
xlab="Global Active Power(kilowatts)")
getwd()
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
source("plotevaluation.R")
getwd()
source("plotevaluation.R")
head(hdata)
data <- read.csv("C://Users//Chu Ying//RepData_PeerAssessment1//activity//activity.csv", header=TRUE)
processed.data <- data[complete.cases(data),]
hdata <- ddply (processed.data, .(date), summarize, sum=sum(steps))
library(plyr)
hdata <- ddply (processed.data, .(date), summarize, sum=sum(steps))
head(hdata)
hist(hdata)
hist(hdata$sum)
hist(random.dates, "weeks", format = "%d %b")
hist(hdata$date, "weeks", format = "%d %b")
hist.POSIXt {graphics}
hist(as.Date(hdata$date), "weeks", format = "%d %b")
hist(as.Date(hdata$date), "days", format = "%d %b")
hist(as.Date(hdata$date), format = "%d %b %y")
hist(as.Date(hdata$date), breaks = "mins" format = "%d %b %y")
hist(as.Date(hdata$date), breaks = "mins", format = "%d %b %y")
hist(as.Date(hdata$date), "mins", format = "%d %b %y")
hist(as.Date(hdata$date), "days", format = "%d %b %y")
hist(as.Date(hdata$date), "10", format = "%d %b %y")
hdata$nDate <- as.Date(hdata$date)
head(hdata)
hist (as.POSIXlt(hdata$nDate), format = "%d %b %y"")
hist (as.POSIXlt(hdata$nDate), format = "%d %b %y")
hist (as.POSIXlt(hdata$nDate), format = "%d %b %y")
hist (as.POSIXlt(hdata$nDate), "days", format = "%d %b %y")
?POSIXlt
as.POSIXlt(hdata$nDate)
ndata
hdata
hist (hdata$nDate, "days", freq=T, format = "%d %b %y"")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y"")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y)
hist (hdata$nDate, "days", freq=T, format = "%d %b %y")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y", xlab="Date")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y", xlab="Date", ylab="No. of Steps")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y", xlab="Date", ylab="No. of Steps", labels="Total Number of Steps taken per day")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y", xlab="Date", ylab="No. of Steps", main="Total no. of steps taken per day")
hist (hdata$nDate, "days", freq=T, format = "%d %b %y", xlab="Date", ylab="No. of Steps", main="Total no. of steps taken per day", axes=F)
axis.Date(1, at=seq(as.Date("2011-10-10"), as.Date("2012-03-19"), by="weeks"),
labels=F, tcl= -0.5)
hist (hdata$nDate, "days", format = "%d %b %y", xlab="Date", ylab="No. of Steps", main="Total no. of steps taken per day")
mean(sum)
head(processed.data)
head(hdata)
hdata$nsum <- as.numeric(sum)
summary(hdata)
str(hdata)
mean(hdata$sum)
as.numeric(mean(hdata$sum))
round(mean(hdata$sum), 0)
unzip("C://Users//Chu Ying//RepData_PeerAssessment1//activity.zip")
unzip("C://Users//Chu Ying//RepData_PeerAssessment1//activity.zip")
data <- read.csv("C://Users//Chu Ying//RepData_PeerAssessment1//activity//activity.csv", header=TRUE)
path <-("C://Users//Chu Ying//RepData_PeerAssessment1//")
unzip(path + "activity.zip")
unzip(path && "activity.zip")
aste('a','b','c')
paste('a','b','c')
unzip(paste(path + 'activity.zip'))
unzip(paste(path, 'activity.zip'))
unzip(paste(path, 'activity.zip'))
paste(path, 'activity.zip')
data <- read.csv("C://Users//Chu Ying//RepData_PeerAssessment1//activity.csv", header=TRUE)
unzip(paste(path ,'activity.zip', collapse=""))
paste(path ,'activity.zip', collapse="")
paste(path ,'activity.zip', collapse="-")
paste(path,'activity.zip', collapse="-")
x <- c("Hello", "World")
paste(x, collapse="")
path <-("C://Users//Chu Ying//RepData_PeerAssessment1//")
x<- c(path,"activity.zip")
unzip(paste(x, collapse=""))
path <-("C://Users//Chu Ying//RepData_PeerAssessment1//")
x<- c(path,"activity.zip")
unzip(paste(x, collapse="")
unzip(paste(x, collapse=""))
paste(x, collapse="")
path <-("C://Users//Chu Ying//RepData_PeerAssessment1//")
x<- c(path,"activity.zip")
unzip(paste(x, collapse=""))
head(processed.data)
interval.mean.steps <- ddply(processed.data,~interval, summarise, mean=mean(steps))
head(interval.mean.steps)
interval.mean <- ddply(processed.data,~interval, summarise, mean=mean(steps))
plot(x = interval.mean$interval, y = interval.mean$mean, type = "l", xlab = "5-Minute-Interval", ylab = "Average number of steps", main = "Daily Activity Pattern")
sum(is.na(data))
data.new <- data
head(data.new)
head(interval.mean)
data.new[which(is.na(data.new$steps)),1]<- dailyact[as.character(interval.mean[which(is.na(data.new$steps)),3])]
data.new[which(is.na(data.new$steps)),1]<- interval.mean[as.character(interval.mean[which(is.na(data.new$steps)),3])]
data.new[which(is.na(data.new$steps)),1]<- interval.mean[as.character(interval.mean[which(is.na(data.new$steps)),2])]
interval.mean[which(is.na(data.new$steps)),2]
interval.mean[as.character(interval.mean[which(is.na(data.new$steps)),2])]
data.new[which(is.na(data.new$steps)),1]<- interval.mean[as.character(data.new[which(is.na(data.new$steps)),2])]
interval.mean[as.character(data.new[which(is.na(data.new$steps)),3])]
data.new[which(is.na(data.new$steps)),2]
data.new[which(is.na(data.new$steps)),3]
data.new[which(is.na(data.new$steps)),1]
data.new[which(is.na(data.new$steps)),3]
head(data.new)
data.new[interval.mean(is.na(data.new$steps)),3])
is.na(data.new$steps)
which(is.na(data.new$steps))
data.new[which(is.na(data.new$steps)),1]
data.new[which(is.na(data.new$steps)),3]
data.new<-data
head(data.new)
data.new[which(is.na(data.new$steps)),1]<- interval.mean[as.character(data.new[which(is.na(data.new$steps)),3])]
data.new[which(is.na(data.new$steps)),3]
interval.mean[0]
interval.mean[1]
head(interval.maen)
head(interval.mean)
interval.mean$interval[0]
interval.mean$interval[,1]
interval.mean$interval[1,]
interval.mean[1,]
data.new[which(is.na(data.new$steps)),1]
data.new[which(is.na(data.new$steps)),3]
interval.mean$inteval[1]
head(interval.mean)
interval.mean[1]$inteval
interval.mean$nmean <- as.character(interval.mean$mean)
head(interval.mean)
interval.mean[1]$nmean
interval.mean[1,]$nmean
library(plyr)
unzip("C://Users//Chu Ying//RepData_PeerAssessment1//activity.zip")
data <- read.csv("C://Users//Chu Ying//RepData_PeerAssessment1//activity.csv", header=TRUE)
data.new <- data
head(data.new)
data.new[which(is.na(data.new$steps)),3]
data.new[is.na(data.new$steps)]
data.new[is.na(data.new$steps),3]
processed.data <- data[complete.cases(data),]
interval.mean <- ddply(processed.data,~interval, summarise, mean=mean(steps))
head(internal.mean)
head(interval.mean)
interval.mean[which(data.new$mean),2]
interval.mean[which(is.na(data.new$mean)),2]
interval.mean[which(is.na(data.new$mean)),`]
interval.mean[which(is.na(data.new$mean)),1]
interval.mean[which(is.na(interval.mean$mean)),2]
interval.mean[which(is.na(interval.mean$mean)),1]
head(data.new)
data.new[which(is.na(data.new$steps)),1]
activity <- data
activity_rm<-activity[which(!is.na(activity$steps)),]
dailyact<-tapply(activity_rm$steps, activity_rm$interval, mean)
head(dailyact)
act_new <- activity
act_new[which(is.na(act_new$steps)),1]<-
dailyact[as.character(act_new[which(is.na(act_new$steps)),3])]
head(act_new)
?which
interval.mean[which(is.na(data.new$mean)),1]
interval.mean[as.character(which(is.na(data.new$mean))),1]
data.new$mean
interval.mean[as.character(which(is.na(interval.mean$mean))),1]
which(is.na(interval.mean$mean))
interval.mean$mean
interval.mean
interval.mean$mean
data.new[which(is.na(data.new$steps)),1]
activity <- merge(activity, steps.interval, by = "interval", suffixes = c("",
".y"))
nas <- is.na(activity$steps)
activity$steps[nas] <- activity$steps.y[nas]
activity <- activity[, c(1:3)]
activity <- merge(activity, steps.interval, by = "interval", suffixes = c("",".y"))
head(activity)
activity <- merge(activity, interval.mean, by = "interval", suffixes = c("",".y"))
head(activity)
tail(activity)
nas <- is.na(activity$steps)
activity$steps[nas] <- activity$steps.y[nas]
head(nas)
activity$steps[nas] <- activity$mean.y[nas]
activity$steps[nas] <- activity$mean[nas]
activity.new <- activity[, c(1:3)]
head(activity.new)
tail(activity.new)
data <-  merge(data, interval.mean, by = "interval")
head(data)
nas <- is.na(data$steps)
data$steps[nas] <- data$mean[nas]
data.new <- activity[, c(1:3)]
head(data.new)
data.new <- data[, c(1:3)]
head(data.new)
daytype <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {
"weekday"
}
}
data.new$daytype <- as.factor(sapply(data.new$date, daytype))
head(data.new)
data.new$daytype <- as.factor(sapply(data.new$date, daytype))
head(data.new)
interval.mean.new <- ddply(data.new,~interval, summarise, mean=mean(steps))
head(interval.mean.new)
interval.mean <- ddply(data.new,~interval, summarise, mean=mean(steps))
head(interval.mean)
?ddply
interval.mean.new <- ddply(data.new,~interval, .(group, daytype), summarise, mean=mean(steps))
interval.mean.new <- ddply(data.new,~interval, group=daytype, summarise, mean=mean(steps))
interval.mean.new <- ddply(data.new,~interval, .(weekdays, weekends), summarise, mean=mean(steps))
interval.mean.new <- ddply(data.new, .(weekdays, weekends), summarise, mean=mean(steps))
head(interval.mean.new)
head(data.new)
interval.mean.new <- ddply(data.new, .(weekdays, weekend), summarise, mean=mean(steps))
interval.mean.new <- ddply(data.new, .(weekday, weekend), summarise, mean=mean(steps))
interval.mean.new <- ddply(data.new, .(interval, daytype), summarise, mean=mean(steps))
head(interval.mean.new)
p <- xyplot(interval.mean.new ~ interval | factor(daytype), data=data.new,
type = 'l')
library(lattice)
p <- xyplot(interval.mean.new ~ interval | factor(daytype), data=data.new,
type = 'l')
p <- xyplot(interval.mean.new ~ interval | factor(daytype), data=interval.mean.new,
type = 'l')
x <- sample(seq(-10, 10, length.out = 15), 30, TRUE)
y <- x + 0.25 * (x + 1)^2 + rnorm(length(x), sd = 5)
xyplot(y ~ x | gl(1, length(types)),
xlab = "type",
ylab = list(c("horizontal=TRUE", "horizontal=FALSE"), y = c(1/6, 4/6)),
as.table = TRUE, layout = c(5, 3))
xyplot(y ~ x ,
layout = c(5, 3))
xyplot(y ~ x ,
layout = c(2, 3))
1
data <- read.csv("C://Users//Chu Ying//RepData_PeerAssessment2//repdata-data-StormData.csv.bz2", header=TRUE)
head(data)
install.packages('knitr', dependencies = TRUE)
# update all existing packages first
update.packages(ask = FALSE, repos = 'http://cran.rstudio.org')
install.packages('knitr', repos = c('http://yihui.name/xran', 'http://cran.rstudio.org'),
type = 'source')
data <- read.csv("C://Users//Chu Ying//RepData_PeerAssessment2//repdata-data-StormData.csv.bz2", header=TRUE)
head(data)
tail(data)
View(data)
file.edit('~/.Rprofile')
qnorm(0.7,mean=80,sd=10)
qnorm(0.3,mean=80,sd=10)
qnorm(0.95,mean=1100,sd=75)
pbinom (4, size=5, prob=0.5)
pnorm(1110,mean=100,sd=75)
pnorm(1115,mean=100,sd=75)
pnorm(1112,mean=100,sd=75)
pnorm(1088,mean=100,sd=75)
qnorm(0.95, mean=100, sd=75)
qnorm(0.95, mean=1100, sd=75)
pbinom(4,size =5, prob=0.05)
choose(5,4) * 0.5^5 + choose(5,5) * 0.5^5
ppois(10, lambda=5*3)
title: "Statistical Inference"
?pch
?at
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbetas(fit)
?rmd
??rmd
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$am <- factor(mtcars$am, labels = c("Automatic", "Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
everything_model = lm(mpg ~ ., data = mtcars)
new_model <- step(lm(mpg ~ ., data = mtcars), trace = 0)
basic_model <- lm(mpg ~ am, data = mtcars)
compare <- anova(basic_model, new_model)
lm(formula = mpg ~ cyl + hp + wt + am, data = mtcars).
data(mtcars)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$am <- factor(mtcars$am, labels = c("Automatic", "Manual"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
everything_model = lm(mpg ~ ., data = mtcars)
summary(everything_model)
new_model <- step(lm(mpg ~ ., data = mtcars), trace = 0)
summary(new_model)
lm(formula = mpg ~ cyl + hp + wt + am, data = mtcars)
model <-lm(formula = mpg ~ cyl + hp + wt + am, data = mtcars).
model <-step(lm(formula = mpg ~ cyl + hp + wt + am, data = mtcars))
summary(model)
new_model <- step(lm(mpg ~ ., data = mtcars), trace = 0)
summary(new_model)
new_model <- step(lm(mpg ~ ., data = mtcars), trace = 0)
summary(new_model)
new_model$coeff
summary(new_model)$coef
everything_model$coeff
summary(everything_model)
install.packages("RGtk2")
install.packages("RGtk2")
install.packages("rattle")
remove.package(rattle)
remove.packages(rattle)
remove.packages("rattle")
remove.packages("RGtk2")
install.packages("RGtk2")
install.packages("rattle")
install.packages('caret', dependencies = TRUE)
install.packages("tree")
getwd()
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='kchuying', token='78FC1F8A28AC3B1056031E915CBDF52F', secret='HYnqiP3wzzJVWkDSuo73JOGT0U+JCzN32K7Gkm1+')
library(shinyapps)
shinyapps::setAccountInfo(name='kchuying', token='78FC1F8A28AC3B1056031E915CBDF52F', secret='HYnqiP3wzzJVWkDSuo73JOGT0U+JCzN32K7Gkm1+')
install.packages("shinyapps")
devtools::install_github('rstudio/shinyapps')
install.packages("shiny")
library("shiny")
install.packages("shiny")
library(shiny)
runExample("01_hello")
dir
getwd
getwd()
setwd("~/data_products")
getwd()
runApp()
shinyapps::setAccountInfo(name='kchuying', token='78FC1F8A28AC3B1056031E915CBDF52F', secret='HYnqiP3wzzJVWkDSuo73JOGT0U+JCzN32K7Gkm1+')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='kchuying', token='78FC1F8A28AC3B1056031E915CBDF52F', secret='HYnqiP3wzzJVWkDSuo73JOGT0U+JCzN32K7Gkm1+')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::deployApp('C:\Users\Chu Ying\Documents\data_products')
shinyapps::deployApp('C:/Users/Chu Ying/Documents/data_products')
runApp()
shinyapps::deployApp('C:/Users/Chu Ying/Documents/data_products')
runExample("02_text")
runApp()
shinyapps::deployApp('C:/Users/Chu Ying/Documents/data_products')
shinyapps::deployApp('C:\Users\Chu Ying\Documents\dataproject')
shinyapps::deployApp('C:/Users/Chu Ying/Documents/dataproject')
devtools::install_github('rstudio/rsconnect')
runApp()
runApp()
runApp()
runApp()
input$decimal,
paste(input$range, collapse=' '),
input$format,
input$animation
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyapps::deployApp('C:/Users/Chu Ying/Documents/data_products')
deployApp()
runApp()
shinyapps::deployApp('C:/Users/Chu Ying/Documents/data_products')
